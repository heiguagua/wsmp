package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-08-23T18:45:33.076+08:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "FreqWarningWebService", 
                  wsdlLocation = "http://192.168.21.106:8192/FreqWarningWebService.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class FreqWarningWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "FreqWarningWebService");
    public final static QName FreqWarningWebServiceSoap = new QName("http://tempuri.org/", "FreqWarningWebServiceSoap");
    public final static QName FreqWarningWebServiceSoap12 = new QName("http://tempuri.org/", "FreqWarningWebServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://192.168.21.106:8192/FreqWarningWebService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FreqWarningWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://192.168.21.106:8192/FreqWarningWebService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FreqWarningWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FreqWarningWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FreqWarningWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public FreqWarningWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public FreqWarningWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public FreqWarningWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns FreqWarningWebServiceSoap
     */
    @WebEndpoint(name = "FreqWarningWebServiceSoap")
    public FreqWarningWebServiceSoap getFreqWarningWebServiceSoap() {
        return super.getPort(FreqWarningWebServiceSoap, FreqWarningWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FreqWarningWebServiceSoap
     */
    @WebEndpoint(name = "FreqWarningWebServiceSoap")
    public FreqWarningWebServiceSoap getFreqWarningWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(FreqWarningWebServiceSoap, FreqWarningWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns FreqWarningWebServiceSoap
     */
    @WebEndpoint(name = "FreqWarningWebServiceSoap12")
    public FreqWarningWebServiceSoap getFreqWarningWebServiceSoap12() {
        return super.getPort(FreqWarningWebServiceSoap12, FreqWarningWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FreqWarningWebServiceSoap
     */
    @WebEndpoint(name = "FreqWarningWebServiceSoap12")
    public FreqWarningWebServiceSoap getFreqWarningWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(FreqWarningWebServiceSoap12, FreqWarningWebServiceSoap.class, features);
    }

}
